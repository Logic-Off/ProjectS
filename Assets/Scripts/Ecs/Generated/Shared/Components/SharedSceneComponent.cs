//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SharedContext
{
	public SharedEntity SceneEntity { get { return GetGroup(SharedMatcher.Scene).GetSingleEntity(); } }
	public bool HasScene { get { return SceneEntity != null; } }

	public bool IsScene {
		get { return HasScene; }
		set	{
			if (value) {
				AddScene();
			}	else {
				RemoveScene();
			}
		}
	}

	public void AddScene() {
		var entity = SceneEntity;
		if (entity == null) {
			CreateEntity().IsScene = true;
		}
	}

	public void ReplaceScene(bool value)	{
		IsScene = value;
	}

	public void RemoveScene() {
		var entity = SceneEntity;
		if (entity != null) {
			entity.Destroy();
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SharedEntity
{
	static readonly Ecs.Shared.SceneComponent SceneComponent = new Ecs.Shared.SceneComponent();
	public bool HasScene { get { return HasComponent(SharedComponentsLookup.Scene); } }

	public bool IsScene {
		get { return HasScene; }
		set {
			if (value != IsScene) {
				if (value) {
					AddScene();
				} else {
					RemoveScene();
				}
			}
		}
	}

	public void AddScene() {
		var index = SharedComponentsLookup.Scene;
		var componentPool = GetComponentPool(index);
		var component = componentPool.Count > 0 ? componentPool.Pop() : SceneComponent;

		AddComponent(index, component);
	}

	public void ReplaceScene(bool value)	{
		IsScene = value;
	}

	public void RemoveScene() {
		RemoveComponent(SharedComponentsLookup.Scene);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class SharedMatcher
{
	static JCMG.EntitasRedux.IMatcher<SharedEntity> _matcherScene;

	public static JCMG.EntitasRedux.IMatcher<SharedEntity> Scene
	{
		get
		{
			if (_matcherScene == null)	{
				var matcher = (JCMG.EntitasRedux.Matcher<SharedEntity>)JCMG.EntitasRedux.Matcher<SharedEntity>.AllOf(SharedComponentsLookup.Scene);
				matcher.ComponentNames = SharedComponentsLookup.ComponentNames;
				_matcherScene = matcher;
			}

			return _matcherScene;
		}
	}
}
